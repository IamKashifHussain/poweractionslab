name: release-solution-to-prod-reusable

on:
  workflow_call:
    inputs:
      solution_name:
        description: 'The solution name.'
        type: string
        default: AlmLab
      solution_shipping_folder:
        description: 'Folder for staging exported solution'
        type: string
        default: out/ship/
      solution_outbound_folder:
        description: 'Staging unpacked solution folder'
        type: string
        default: out/solutions/
      solution_source_folder:
        description: 'Folder to be created and checked in'
        type: string
        default: solutions/
      solution_release_folder:
        description: 'Folder for released binaries'
        type: string
        default: out/release
      BUILD_ENVIRONMENT_URL:
        description: 'Build environment URL'
        type: string
        required: true
      PRODUCTION_ENVIRONMENT_URL:
        description: 'Production environment URL'
        type: string
        required: true
      CLIENT_ID:
        description: 'The client ID'
        type: string
        required: true
      TENANT_ID:
        description: 'The tenant ID'
        type: string
        required: true
    secrets:
      envSecret:
        description: 'Secret value for SPN authentication'
        required: true

jobs:
  convert-to-managed:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Power Platform CLI
        uses: microsoft/powerplatform-actions/actions-install@v1.9.1

      - name: Pack solution
        uses: microsoft/powerplatform-actions/pack-solution@v1
        with:
          solution-folder: ${{ inputs.solution_source_folder }}/${{ inputs.solution_name }}
          solution-file: ${{ inputs.solution_outbound_folder }}/${{ inputs.solution_name }}.zip
          solution-type: Unmanaged

      - name: Import solution as unmanaged to build env
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ inputs.BUILD_ENVIRONMENT_URL }}
          app-id: ${{ inputs.CLIENT_ID }}
          client-secret: ${{ secrets.envSecret }}
          tenant-id: ${{ inputs.TENANT_ID }}
          solution-file: ${{ inputs.solution_outbound_folder }}/${{ inputs.solution_name }}.zip
          force-overwrite: true
          publish-changes: true

      - name: Export solution as managed
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: ${{ inputs.BUILD_ENVIRONMENT_URL }}
          app-id: ${{ inputs.CLIENT_ID }}
          client-secret: ${{ secrets.envSecret }}
          tenant-id: ${{ inputs.TENANT_ID }}
          solution-name: ${{ inputs.solution_name }}
          managed: true
          solution-output-file: ${{ inputs.solution_shipping_folder }}/${{ inputs.solution_name }}_managed.zip

      - name: Upload managed solution and settings
        uses: actions/upload-artifact@v4
        with:
          name: managedSolutions
          path: |
            ${{ inputs.solution_shipping_folder }}/${{ inputs.solution_name }}_managed.zip
            config/prod.settings.json
          retention-days: 7

  release-to-staging:
    needs: [convert-to-managed]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Install Power Platform CLI
        uses: microsoft/powerplatform-actions/actions-install@v1

      - name: Download managed solution and settings
        uses: actions/download-artifact@v4
        with:
          name: managedSolutions
          path: ${{ inputs.solution_release_folder }}

      - name: Confirm downloaded files
        run: dir ${{ inputs.solution_release_folder }} /s

      - name: Validate solution and settings files
        run: |
          if (!(Test-Path "${{ inputs.solution_release_folder }}\out\ship\${{ inputs.solution_name }}_managed.zip")) {
            Write-Error "❌ Managed solution not found at expected path"
            exit 1
          }
          if (!(Test-Path "${{ inputs.solution_release_folder }}\config\prod.settings.json")) {
            Write-Error "❌ Deployment settings file missing"
            exit 1
          }

      - name: Import solution to production
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: ${{ inputs.PRODUCTION_ENVIRONMENT_URL }}
          app-id: ${{ inputs.CLIENT_ID }}
          client-secret: ${{ secrets.envSecret }}
          tenant-id: ${{ inputs.TENANT_ID }}
          solution-file: ${{ inputs.solution_release_folder }}/out/ship/${{ inputs.solution_name }}_managed.zip
          use-deployment-settings-file: true
          deployment-settings-file: ${{ inputs.solution_release_folder }}/config/prod.settings.json
          force-overwrite: true
          publish-changes: true

      - name: Confirm deployment
        run: echo "✅ '${{ inputs.solution_name }}' successfully deployed to PROD."
